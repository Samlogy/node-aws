name: API CI/CD Pipeline

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

jobs:
  api:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Setup Node.js
           uses: actions/setup-node@v3
           with:
             node-version: ${{ matrix.node-version }}

         - name: running Prettier
           run: npm run format:fix

        #  - name: running Eslint
        #    run: npm run lint

         - name: Install API dependencies
           working-directory: ./server 
           run: npm i

         - name: Build API
           working-directory: ./server
           run: npm run build --if-present

        #  - name: Run unit tests
        #    working-directory: ./server
        #    run: npm run test:unit
        
         - name: Build Docker Image
           working-directory: ./server
           run: |
              docker build -t "${{ secrets.DOCKER_USERNAME }}/node-app:1.0" .

        #  - name: Run integration tests
        #    working-directory: ./server
        #    run: npm run test:integration

         - name: Log in => Docker Hub
           run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
   
         - name: Push Docker Image => Docker Hub
           run: |
             docker push "${{ secrets.DOCKER_USERNAME }}"/node-app:1.0
  
  client:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Setup Node.js
           uses: actions/setup-node@v3
           with:
             node-version: ${{ matrix.node-version }}
         
         - name: Install API dependencies
           working-directory: ./client
           run: npm i

         - name: Build API
           working-directory: ./client
           run: npm run build --if-present

         - name: Run unit tests
           working-directory: ./client
           run: npm run test:unit --if-present
        
         - name: Build Docker Image
           working-directory: ./client
           run: |
              docker build -t "${{ secrets.DOCKER_USERNAME }}"/react-app:1.0 .

         - name: Run integration tests
           working-directory: ./client
           run: npm run test:integration --if-present

         - name: Log in => Docker Hub
           run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
   
         - name: Push Docker Image => Docker Hub
           run: |
             docker push "${{ secrets.DOCKER_USERNAME }}"/react-app:1.0
    